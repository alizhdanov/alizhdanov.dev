# TODO: add monorepo features

version: 2.1

orbs:
  compare-url: iynere/compare-url@0.4.10

commands:
  install_deps:
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

jobs:
  build_serverless:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/project/serverless

    steps:
      - checkout:
          path: ~/project

      - run:
          name: Install Serverless CLI
          command: sudo yarn global add serverless

      - install_deps

      - run:
          name: Run tests
          command: yarn test

      - run:
          name: Deploy application
          command: sls deploy

  build_graphql:
    docker:
      - image: circleci/node:11.11

    working_directory: ~/project/graphql

    steps:
      - checkout:
          path: ~/project

      - install_deps

      - run:
          name: Run tests
          command: yarn test

      - deploy:
          command: |
            yarn now --token $ZEIT_TOKEN

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              yarn now --token $ZEIT_TOKEN alias
            fi
  
  build_frontend:
    docker:
      - image: circleci/node:11.11

    working_directory: ~/project/frontend

    steps:
      - checkout:
          path: ~/project

      - install_deps  

      - run:
          name: Netlify Deploy
          command: ./node_modules/.bin/netlify deploy --prod --dir=. --functions=functions

  monorepo:
    docker:
      - image: circleci/circleci-cli
    steps:
      - checkout

      - compare-url/reconstruct

      - run:
          command: |
            # save value stored in file to a local env var
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)

            COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')

            echo "Commit range: $COMMIT_RANGE"

            for ORB in */; do

              orbname=$(basename $ORB)

              if [[ $(git diff --name-status  $COMMIT_RANGE -- | grep "$orbname") ]]; then

                echo "publishing ${orbname}"
                echo "publishing $CIRCLE_TOKEN"

                circleci orb publish ${ORB}/orb.yml alizhdanovdev/${orbname}@${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:7} --token=$CIRCLE_TOKEN
              else
                echo "${orbname} not modified; no need to publish"
              fi
            done
          name: Publish modified orbs
          # shell: /bin/bash -exo pipefail

workflows:
  version: 2
  build:
    jobs:
      # - build_serverless
      # - build_graphql
      # - build_frontend
      - monorepo
