TODO: move into workspaces

version: 2.1

orbs:
  compare-url: iynere/compare-url@0.4.10

commands:
  install_deps:
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  skip_job:
    parameters:
      project:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/build

      - run:
          name: Terminate job if no changes
          command: |
            if [ -d "/tmp/build/<<parameters.project>>/" ]; then
              echo "[STARTING] <<parameters.project>>"
            else
              echo "[SKIPPING] <<parameters.project>>"
              circleci step halt
            fi

jobs:
  build_serverless:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/project/serverless

    steps:
      - checkout:
          path: ~/project

      - skip_job:
          project: serverless

      - run:
          name: Install Serverless CLI
          command: sudo yarn global add serverless

      - install_deps

      - run:
          name: Run tests
          command: yarn test

      - run:
          name: Deploy application
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sls deploy
            else
              echo "temporary skipping production deploy for pull requests"
            fi

  build_graphql:
    docker:
      - image: circleci/node:11.11

    working_directory: ~/project/graphql

    steps:
      - checkout:
          path: ~/project

      - skip_job:
          project: graphql

      - install_deps

      - run:
          name: Run tests
          command: yarn test

      - deploy:
          command: |
            yarn now --token $ZEIT_TOKEN --local-config now.json

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              yarn now --token $ZEIT_TOKEN --local-config now.json alias 
            else
              echo "temporary skipping production deploy for pull requests"
            fi
  
  build_frontend:
    docker:
      - image: circleci/node:11.11

    working_directory: ~/project/frontend

    steps:
      - checkout:
          path: ~/project

      - skip_job:
          project: frontend

      - install_deps  

      - run:
          name: Build
          command: yarn run build

      - run:
          name: Netlify Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              yarn run deploy
            else
              echo "temporary skipping production deploy for pull requests"
            fi

  monorepo:
    docker:
      - image: circleci/circleci-cli
    steps:
      - checkout

      - compare-url/reconstruct

      - run:
          name: Find modified projects

          command: |
            # save value stored in file to a local env var
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)

            COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')

            echo "Commit range: $COMMIT_RANGE"

            mkdir /tmp/build/

            # HACK: if there is no files in build/, circleci will throw an error.
            # dunno how to fix it for now
            touch /tmp/build/empty

            for PROJECT in */; do

              projectname=$(basename $PROJECT)

              if [[ $(git diff --name-status  $COMMIT_RANGE -- | grep "$projectname") ]]; then

                echo "${projectname} modified"

                mkdir /tmp/build/${PROJECT} -p

              else
                echo "${projectname} not modified"
              fi
            done
          
      - persist_to_workspace:
          root: /tmp/build/

          paths:
            - frontend
            - graphql
            - serverless
            - empty

workflows:
  version: 2
  build:
    jobs:
      - monorepo
      - build_frontend:
          requires:
            - monorepo
      - build_graphql:
          requires:
            - monorepo
      - build_serverless:
          requires:
            - monorepo
      
